<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book [

<!ENTITY mdash
	"&#x2014;"
>

<!-- project metadata -->

<!ENTITY project
	"<productname>Igneous Math</productname>"
>

<!ENTITY project.id
	"igm"
>

<!-- terms -->

<!ENTITY cltl
	"<productname><acronym>ANSI</acronym> Common Lisp</productname>"
>

<!ENTITY asdf
	"<productname>ASDF</productname>"
>

<!-- terms -->

<!ENTITY Ig1m
	"<productname>Ig<subscript>1</subscript><superscript>m</superscript></productname>"
>

<!ENTITY Ig2m
	"<productname>Ig<subscript>2</subscript><superscript>m</superscript></productname>"
>

<!ENTITY clim
	"<productname><acronym>CLIM</acronym></productname>"
>

<!ENTITY mcclim
	"<productname><acronym>McCLIM</acronym></productname>"
>

<!ENTITY clos
	"<productname><acronym>CLOS</acronym></productname>"
>

<!ENTITY mop
	"<productname><acronym>MOP</acronym></productname>"
>


]>
<book xmlns="http://docbook.org/ns/docbook"
      xmlns:xlink="http://www.w3.org/1999/xlink"
      xmlns:xi="http://www.w3.org/2001/XInclude"
      xml:id="&project.id;.guide"
      version="5.0-extension metacommunity-1.0"
      >
  <info>
    <title>&project; &mdash; Guide</title>
    <author>
      <personname>Sean Champ</personname>
    </author>
    <pubdate>24 Dec 2014</pubdate>

    <revhistory>
      <revision>
        <date>24 Dec 2014</date>
        <revdescription>
          <formalpara>
            <title>Summary</title>
            <para>
              <simplelist>
                <member>Initial revision</member>
                <member>
                  Comments (appendix) about design model applied in
                  &project; &mdash; <glossterm>sprints</glossterm> as
                  <foreignphrase>viz a viz</foreignphrase>
                  <glossterm>scrum</glossterm>
                </member>    
                <member>
                  Comments about code alignment in &Ig1m;, &Ig2m;
                </member>
                <member>
                  Comments about distinction of concepts of
                  <emphasis>measurement numeric value</emphasis> and
                  <emphasis>measurement magnitude, measurement
                  degree</emphasis>
                </member>
              </simplelist>
            </para>
          </formalpara>
        </revdescription>
      </revision>
    </revhistory>

  </info>

  <preface xml:id="&project.id;.guide.ov">
    <title>Overview</title>

    <remark>TBD - Develop a singular overview about this multi-module
    system. &project; is not formally a CAS, at &Ig2m;, but provides a
    small set of elementary <glossterm>modules</glossterm>
    ... etc.</remark>

  </preface>


  <appendix>
    <title>Software Design Model</title>

    <para>
      &project; is developed essentially in an
      <glossterm>agile</glossterm> model.  At &Ig2m;, &project;
      has not adopted any formal <glossterm>process model</glossterm>
      for development<remark>
      <footnote>
        <para>and well, the &project; project does not have a
        large development team, at this revision</para>
      </footnote></remark>. In a broad sense, the development
      model &mdash; as developed, reflectively, in the development of
      &project; &mdash; may largely resemble a
      <productname>Scrum</productname> development model, if any other 
      generic <productname>agile</productname> model. 
    </para>
    <para>
      Similar to <productname>Scrum</productname>, &project; is
      developed in each of a momentary <glossterm>sprint</glossterm>. 
      Unlike <productname>Scrum</productname>, however, the
      <glossterm>sprint</glossterm> duration is not preceded with any
      manner of a <emphasis>planning session</emphasis>, and is not
      followed with any manner of formal
      <glossterm>review</glossterm>, excepting &mdash; in the latter
      regards &mdash; a manner of a practical <emphasis>review by
      application</emphasis><remark>
      <footnote>
        <para>
          i.e. a certain manner of a <foreignphrase>Trial by
          Fire</foreignphrase> approach to <glossterm>bug
          hunting</glossterm> and <glossterm>design
          review</glossterm>, in software development.
        </para>
      </footnote>
      </remark>. Certainly, the <foreignphrase>ad
      hoc</foreignphrase> <glossterm>agile</glossterm>
      methodology developed in &project; may not be suitable for
    <emphasis>large scale</emphasis> projects. However, it appears to
    be sufficient for a manner of <emphasis>small scale</emphasis>,
    <glossterm>modular development</glossterm>, even at a
    <emphasis>scale</emphasis> of a <glossterm>developer
    team</glossterm> comprised  essentially of an individual
    <glossterm>developer</glossterm>.
    </para> 

    <section>
      <title>"Lessons from Camptown" &mdash; Concerning Alignment 
      Between Design and Application in a Sprint-Oriented
      Development Model</title>

      <para>The &project; was begun essentially as a prototype for
       a system for mathematical computations. As a summary of the
       first set of goals addressed in the &project; project: The
       primary goal was to  develop an
       <glossterm>object system</glossterm> for
       <glossterm>measurement</glossterm> values, in a model for
       <glossterm>dispatched</glossterm> application of
       <glossterm>monadic</glossterm>, <glossterm>diadic</glossterm>,
       and <glossterm>variadic</glossterm> mathematical
       <glossterm>operations</glossterm> &mdash; the latter,
       esentially as to extend of <glossterm>functions</glossterm>
       implemented for mathematical <glossterm>operations</glossterm>
       in &cltl;. </para>

       <para>As secondary goals, it was estimated that a
       graphical <glossterm>presentation</glossterm> model may be
       developed for such an <glossterm>object system</glossterm> as
       would be addressed in the previous goals. It was esimated that
       such a graphical <glossterm>presentation</glossterm> model may be
       developed specifically onto &clim;. By extension, it was a
       secondary goal: To develop a graphical model 
       for <glossterm>phasor</glossterm> analysis and other
       <glossterm>signal domain</glossterm> analysis, such that could
       be applied &mdash; specifically &mdash; in an endeavor to
       clarify some concepts as with regards to qualities of
       <glossterm>electrodynamically reactive</glossterm> electrical
       circuit elements and their applications within circuits of
       <glossterm>alternating current</glossterm>. In this set
       of those goals, perhaps that much of the design of &project;
       may be subsequently revised as towards applications of
       technologies for <glossterm>pulse width modulation</glossterm> 
       within <glossterm>digital signaling</glossterm> systems.
       Concerning a question of the essential
       <glossterm>geometry</glossterm> of
       <glossterm>electrodynamically reactive</glossterm> circuits 
       within <glossterm>alternating current</glossterm> systems
       &mdash; perhaps that may remain to be addressed, as towards an
       application of this system, extensionally, for
       <glossterm>modeling</glossterm> of <glossterm>numeric 
       systems</glossterm> in relation to
       <glossterm>components</glossterm> of <glossterm>electrical
       systems</glossterm>, as for purposes of electronic design
       and electrical system diagnostics.
      </para>

      <para>
        That secondary set of goals would prove to  be largely
        orthogonal to the primary set of goals, as addressed in the
        development of the &project; <glossterm>codebase</glossterm>.
      </para>

      <section>
        <title>The First Sprints: &Ig1m;</title>

        <para>
          It might be estimated: That there cannot be a work developed 
          of the sciences, except that it would be a work developed in
          extension of <emphasis>existing work</emphasis>, insofar as
          of theories and practices developed in domains of
          scientific discourse and the practical applications of
          scientific theory.<remark>
          <footnote>
            <para>
              This comment, itself, perhaps extends of
              Isaac Newton's original juxtaposition of
              <glossterm>geometry</glossterm> and
              <glossterm>mechanics</glossterm> &mdash; broadly,
              towards a contrast of <emphasis>ideal
              systems</emphasis> and <emphasis>material
              systems</emphasis>, in science and engineering.
            </para>
          </footnote></remark>. Likewise, the design of &project; was
          begun after a review of <emphasis>existing work</emphasis>,
          namely as with regards to repersentations of meaurement
          values within computational systems. This article will avoid
          any lengthy historic dissertation about the development of 
          <productname><acronym>XML</acronym></productname> and its
          origins in
          <productname><acronym>SGML</acronym></productname>. Specifically
          as with regards to
          <productname><acronym>SGML</acronym></productname>, 
          <remark>...</remark>
        <productname>HyTime</productname> <remark>Hypermedia -
        orthogonal to this article, relevant to the McCLIM fork, and
        not exclusively represented with MathML.</remark> 
        <remark>(Existing work, in information sciences)</remark>
        <remark>(See also: SWEET Ontologies)</remark>
        </para>

        <para>
          <remark>Also a part of the existing work, namely in the
          domain of the material sciences: The
          BIPM's documentation about the SI system, itself, and that
          from the NIST.</remark>
        </para>

        <para>
          <remark>Existing work, in Common Lisp: {rmarren}'s
          <productname>Unit-Formula</productname> and the study
          referenced from the same &mdash; see also, bibliography &amp;
          bibliography tools...</remark>
        </para>


        <para>
          Subsequent to a review of <emphasis>existing
          work</emphasis> &mdash; insofar as noted, in this article,
          as with regards to systems of measurements, orthogonal to
          a system of vector mathematics &mdash; a number of
          corresponding <glossterm>object models</glossterm> were
          designed during the changesets now comprising &Ig1m;:
          <simplelist>
            <member>Measurement Domain</member>
            <member>Measurement Class</member>
            <member>Numeric Prefix Objects for Annotation of
            Measurement Values</member>
          </simplelist>
        </para>
        
        <sidebar>
          <para>
            Concerning any details of the design of that three-part object
            model for measurement systems in &project;, and its
            interfaces for application within extensional systems, the
            reader would kindly be referred to the source code of
            &project; &mdash; this <emphasis>guide</emphasis> book,
            itself, being presently in absence of any specific
            documentation for application of those object
            models. Certainly, those are documented thoroughly, in the
            project's source code. 
          </para>
          <remark>
            This manual should be updated
            subsequently, to describe those object models as in a
            manner sufficient for their application. Also, there would
            be the revisions to be developed in &Ig2m;, as with
            regards to a <glossterm>reader</glossterm>
            <glossterm>syntax</glossterm> for input of numeric
            measurement values, etc.
          </remark>
        </sidebar>
        
        <para>
          Parallel to the development of the
          <glossterm>measurement</glossterm> model, during the
          development of &Ig1m;, an <glossterm>object
          model</glossterm> was defined also for
          definition and application of <glossterm>monadic</glossterm>,
          <glossterm>diadic</glossterm>, and
          <glossterm>variadic</glossterm> mathematical 
          <glossterm>operations</glossterm>. That <glossterm>object
          model</glossterm> was defined as an extension of the 
          <productname>Common Lisp Object System</productname> (&clos;)
          &mdash; insofas as the latter is standardized in &cltl; and
          may be extended in applciations of &clos; via the
          <productname>MetaObject Protocol</productname> (&mop;). The
          components of &Ig1m; as extending of &mop;, likewise
          extend of the &mop; <glossterm>model</glossterm> for
          implementation of <glossterm>funcallable</glossterm>
          <glossterm>standard objects</glossterm>. Essentially, this
          component of the &project; <glossterm>codebase</glossterm>
          implements a unique set of <glossterm>classes</glossterm> of
          &clos; <glossterm>method</glossterm>  and <glossterm>generic
          function</glossterm> <glossterm>objects</glossterm>, such
          that the <glossterm>method</glossterm>
          <glossterm>dispatching</glossterm> within the latter is not
          a standard <glossterm>method</glossterm>
          <glossterm>dispatching</glossterm>. <remark>This componenent of
          &Ig1m; may be subject to some further revision. At the time
          of the writing of this remark, development of &Ig1m; is
          focusing primarily about refactoring of the
          <glossterm>measurement</glossterm> <glossterm>object
          model</glossterm>.</remark>
        </para>

        <para>
          As well as the development of those discrete
          <glossterm>object models</glossterm>, some simpler prototypes
          were created within the &project; codebase, during &Ig1m;
          development. Specifically, there was a
          prototype created &mdash; albeit, a trivial prototype
          &mdash; towards a development of a &clim; 
          <glossterm>presentation model</glossterm> for
          <glossterm>objects</glossterm> of a 
          system for <glossterm>linear mathematics</glossterm>,
          beginning namely at the <glossterm>presentation</glossterm>
          of a <glossterm>two dimensional</glossterm>
          <glossterm>matrix</glossterm> <glossterm>object</glossterm>
          onto a &clim; <glossterm>application
          pane</glossterm>. 
        </para>
        <para>
          Fourthly, some intial prototypes were
          created for a definition of a formal <glossterm>object
          model</glossterm> for <glossterm>scalar</glossterm> and
          <glossterm>vector</glossterm>
          <glossterm>objects</glossterm> &mdash; pending revision, in
          extension of the mathematical
          <glossterm>operations</glossterm> <glossterm>object
          model</glossterm> defined originally in &Ig1m;.
        </para>

        <para>
          Lasly, &Ig1m; saw the development of a system for
          <glossterm>rational</glossterm>
          <glossterm>scaling</glossterm> of
          <glossterm>decimal</glossterm>
          <glossterm>numeric</glossterm>
          <glossterm>values</glossterm>. The implementaiton of this
          feature might corresponds conveniently with the system for 
          <glossterm>measurement</glossterm>
          <glossterm>objects</glossterm>, as also begun in
          &Ig1m;
        </para> 

        
      </section>

      <section>
        <title>Refactoring in &Ig2m;</title>

        <section>
          <title>Refactoring of the &Ig1m; Measurement Object
          Model</title>

          <remark>&Ig1m; - measurement domains; base measurement
          units; fundamental measurement units; linear measurement
          units</remark> 

          <remark>&Ig2m; - derived measurement units; measurement
          units describing geometric qualities; measurement unit
          conversion</remark>

          <remark>Furthermore, &Ig2m; has seen the emergence of a
          concern with regards to <emphasis>code alignment</emphasis>
          and <emphasis>design alignment</emphasis> &mdash; thus, to
          the primary thesis orignally denoted of this
          article. Simply, it is the author's observation: That across
          the many <glossterm>sprints</glossterm> ultimately comprising
          the set of <glossterm>changesets</glossterm> developed in
          &Ig1m;, the <emphasis>system as developed</emphasis> became,
          in some ways, <glossterm>ambiguous</glossterm> within itself
          &mdash; furthermore, <glossterm>misaligned</glossterm>,
          within its own codebase. At this time, it appears that the
          primary concerns of that
          <glossterm>misalignment</glossterm> may be denoted as  as
          with regards to: Concepts of function naming, function
          application, functional behaviors, and intended
          application. Insofar as the process of the discovery of this
          concern, it would also serve to denote an orthogonoal
          concern, as with regards to functional testing.</remark>
          
        </section>


        <section>
          <title>Design for Application of the revised &Ig2m;
          Measurement Object Model, in Extension of the &Ig1m;
          Object Model for Mathematical Applications</title>

          <remark>This may proceed not until after the program
          elements denoted in the previous section may be refactored
          to any condition of complete normalcy.</remark>
        </section>


        <section>
          <title>Development of the &Ig1m; Prototypes for Scalar and
          Vector Objects</title>

          <remark>There is some ambiguity with regards to the classes
          <classname>measurement</classname> and
          <classname>scalar</classname>, as towards a question of how
          the class <classname>scalar</classname> would finally be
          defined. Otherwise, this may be developed  as towards a
          definition of a system for applications in linear
          mathematics. Infoar as the
          <classname>measurement</classname>/<classname>scalar</classname>
          ambiguity, that could possibly be revised with a definition of 
          <classname>scalar</classname> as a
          <glossterm>container</glossterm> for a <glossterm>numeric
          value</glossterm>, but again there is the question of how
          the classes of <glossterm>numeric value</glossterm> would be
          defined or provided with an <glossterm>interface</glossterm>
          for mathematical procedures. Considering that a &cltl;
          implementation may provide a number of optimizations for
          mathematical functions, but that those optimizations would
          be contingent on whether the <glossterm>compiler</glossterm>
          would be able to determine an existing numeric type for the
          parameters to any single, optimized mathematical operation:
          It would be desirable to ensure that any application of the 
          <classname>scalar</classname> class would not serve as to
          <emphasis>loose information</emphasis> with regards to the
          numeric type of any numeric value contained by a
          <classname>scalar</classname>
          <glossterm>object</glossterm>. Not insomuch a mere excerise
          in tedious application design, such considerations might
          serve towards an optimization of program systems, whether or
          not of any program systems that would require that
          procedures complete within a model of determinisic timing,
          even insofar as in mathematical operations within the Common
          Lisp programming environment.
          </remark> 
        </section>
                
      </section>


      <!-- <section> -->
      <!--   <title>Further  -->
      

    </section>
  </appendix>

</book>
